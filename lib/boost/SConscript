# -*- mode: python; -*-

env = DefaultEnvironment()

boost_orig_headers= [Dir('/usr/include/boost169/boost')]
boost_res_headers = [Dir('#/build/include/boost')]

boost_libs_names = [
    'libboost_atomic.so',
    'libboost_chrono.so',
    'libboost_container.so',
    'libboost_context.so',
    'libboost_contract.so',
    'libboost_coroutine.so',
    'libboost_date_time.so',
    'libboost_filesystem.so',
    'libboost_graph.so',
    'libboost_iostreams.so',
    'libboost_locale.so',
    'libboost_log_setup.so',
    'libboost_log.so',
    'libboost_math_c99f.so',
    'libboost_math_c99l.so',
    'libboost_math_c99.so',
    'libboost_math_tr1f.so',
    'libboost_math_tr1l.so',
    'libboost_math_tr1.so',
    'libboost_numpy27.so',
    'libboost_numpy36.so',
    'libboost_prg_exec_monitor.so',
    'libboost_program_options.so',
    'libboost_python27.so',
    'libboost_python36.so',
    'libboost_random.so',
    'libboost_regex.so',
    'libboost_serialization.so',
    'libboost_stacktrace_addr2line.so',
    'libboost_stacktrace_basic.so',
    'libboost_stacktrace_noop.so',
    'libboost_system.so',
    'libboost_thread.so',
    'libboost_timer.so',
    'libboost_type_erasure.so',
    'libboost_unit_test_framework.so',
    'libboost_wave.so',
    'libboost_wserialization.so' ]

boost_inc_cfg = env.Command(target = boost_res_headers,
    source = boost_orig_headers, action = ['ln -sf $SOURCE $TARGET'])
env.Precious(boost_inc_cfg)

boost_res_libs = []
boost_orig_libs = []
boost_libs_acts = []
for libname in boost_libs_names:
    orig_lib_name = '/usr/lib64/boost169/' + libname
    res_lib_name = File('#/build/lib/' + libname).abspath
    boost_orig_libs.append(orig_lib_name)
    boost_res_libs.append(res_lib_name)
    boost_libs_acts.append('ln -sf ' + orig_lib_name + ' ' + res_lib_name)
boost_lib_cfg = env.Command(target = boost_res_libs,
    source = boost_orig_libs, action = boost_libs_acts)
env.Precious(boost_lib_cfg)

boost_python_cfg = env.Command(target = File('#/build/lib/libboost_python.so').abspath,
    source = File('#/root/work/build/lib/libboost_python36.so').abspath,
    action = ['ln -sf $SOURCE $TARGET'])
env.Precious(boost_python_cfg)

# boost_libs.append('#/build/lib/libboost_python.so')

# boost_products = boost_headers_dir + boost_libs

# make links to system includes and libraries in /root/contrail folder
# boost_cmd = ('mkdir -p /root/contrail/build/include && '
# ' ln -s /usr/include/boost169/boost /root/contrail/build/include/boost && '
# ' ln -s /usr/lib64/boost169/libboost_*.so* /root/contrail/build/lib/ && '
# ' ln -s /root/contrail/build/lib/libboost_python36.so /root/contrail/build/lib/libboost_python.so')

# boost_cfg = env.Command(boost_products, None, boost_cmd)
