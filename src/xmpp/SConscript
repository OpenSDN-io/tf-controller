#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

# -*- mode: python; -*-

import subprocess
import shutil
import os

Import('BuildEnv')

def MapBuildDir(dirs):
    return list(map(lambda x: '#/' + Dir('.').path + '/../' + x, dirs))

env = BuildEnv.Clone()

sandesh_files = env.SConscript('sandesh/SConscript', exports='BuildEnv', duplicate = 0)

env.CppEnableExceptions()
env.Append(CCFLAGS = ['-fexceptions'])

sandesh_files_ = []
for src in sandesh_files:
    objname = src.replace('.cpp', '.o')
    obj = env.Object(objname, 'sandesh/' + src)
    sandesh_files_.append(obj)

libxmpp = env.Library('xmpp',
                     [
                      'xmpp_channel.cc',
                      'xmpp_config.cc',
                      'xmpp_connection.cc',
                      'xmpp_connection_manager.cc',
                      'xmpp_factory.cc',
                      'xmpp_lifetime.cc',
                      'xmpp_session.cc',
                      'xmpp_state_machine.cc',
                      'xmpp_server.cc',
                      'xmpp_client.cc',
                      'xmpp_proto.cc',
                      'xmpp_init.cc',
                      'xmpp_channel_mux.cc'
                      ] + sandesh_files_ )

env.Prepend(LIBS=['sandesh', 'http_parser', 'curl', 'http',
                  'io', 'ssl', 'pugixml', 'xml', 'boost_regex'])

env.Append(LIBS=['rt'])

libs = MapBuildDir(['io'])
env.Append(LIBPATH=libs)
libs = MapBuildDir(['xml'])
env.Append(LIBPATH=libs)
libs = MapBuildDir(['schema'])
env.Append(LIBPATH=libs)

xmpp_include = '#/' + Dir('.').path
env.Append(CPPPATH=xmpp_include)
env.Append(CPPPATH=[env['TOP']])
env.Append(CPPPATH = [env['TOP'] + '/bgp'])
env.Append(CPPPATH = [env['TOP'] + '/io'])
env.Append(CPPPATH = [env['TOP'] + '/tools/sandesh/library/common'])

xmpp_test_suite = env.SConscript('test/SConscript',
                                 exports='BuildEnv', duplicate = 0)
