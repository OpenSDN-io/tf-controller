# -*- mode: python; -*-

#
# Copyright (c) 2014 Juniper Networks, Inc. All rights reserved.
#
import os

Import('CfgmEnv')
env = CfgmEnv.Clone()

base_path = '#controller/src/config/device-manager/'

autogen_infra_sources = [
    '#/src/contrail-api-client/generateds/generateDS.py',
    '#/src/contrail-api-client/generateds/TypeGenerator.py',
    '#/src/contrail-api-client/generateds/ccmap.py',
    '#/src/contrail-api-client/generateds/idl_parser.py',
    '#/src/contrail-api-client/generateds/ifmap_global.py',
    '#/src/contrail-api-client/generateds/ifmap_model.py',
    '#/src/contrail-api-client/generateds/ifmap_frontend.py',
]
autogen_sources = [
    '#controller/src/config/device-manager/device_schema/juniper/juniper_common.xsd',
]
abstract_autogen_sources = [
    '#controller/src/config/device-manager/device_schema/abstract_device/abstract_device.xsd',
]

autogen_script = File('#src/contrail-api-client/generateds/generateDS.py').path
autogen_cmd = '%s -f -o %s -g device-api' % (autogen_script, Dir(base_path + 'device_api/juniper_common').path)
abstract_gen_cmd = '%s -f -o %s -g device-api' % (autogen_script, Dir(base_path + 'abstract_device_api/abstract_device').path)

generated_files = [
    base_path + 'device_api/__init__.py',
    base_path + 'device_api/juniper_common_xsd.py'
]
generated_rule = env.Command(
    generated_files,
    '#controller/src/config/device-manager/device_schema/juniper/juniper_common.xsd',
    autogen_cmd + ' $SOURCE')

abstract_generated_files = [
    base_path + 'abstract_device_api/__init__.py',
    base_path + 'abstract_device_api/abstract_device_xsd.py'
]
abstract_generated_rule = env.Command(
    abstract_generated_files,
    '#controller/src/config/device-manager/device_schema/abstract_device/abstract_device.xsd',
    abstract_gen_cmd + ' $SOURCE')

generateds_rule = env.Install(base_path + "device_api", "#src/contrail-api-client/generateds/generatedssuper.py")
abstract_generateds_rule = env.Install(base_path + "abstract_device_api", "#src/contrail-api-client/generateds/generatedssuper.py")

dm_introspect_pkg = env.SandeshGenPy(
    'dm_introspect.sandesh', base_path + 'device_manager/sandesh/', False)

if 'install' in BUILD_TARGETS:
    # Documentation
    doc_files = []
    doc_files += env.SandeshGenDoc('dm_introspect.sandesh')
    doc_files += env['CFGM_DOC_FILES']
    env.Alias('install', env.Install(
        env['INSTALL_MESSAGE_DOC'] + '/contrail-device-manager/', doc_files))

env.Depends(generated_rule, [autogen_infra_sources, autogen_sources])
env.Depends(abstract_generated_rule, [autogen_infra_sources, abstract_autogen_sources])
sdist_depends = [generated_rule, generateds_rule, abstract_generated_rule, abstract_generateds_rule]
sdist_depends.extend(dm_introspect_pkg)

sdist_gen = env.Command(
    '/pip/device_manager-0.1.dev0-py3-none-any.whl', 'setup.py',
    'cd ' + Dir(base_path).path + ' && ' + 'python3 setup.py bdist_wheel --dist-dir /pip')
env.Depends(sdist_gen, sdist_depends)
env.Alias('install', sdist_gen)

deps = [
    '/pip/sandesh-0.1.dev0-py3-none-any.whl',
    '/pip/sandesh_common-0.1.dev0-py3-none-any.whl',
    '/pip/contrail_api_client-0.1.dev0-py3-none-any.whl',
    '/pip/cfgm_common-0.1.dev0-py3-none-any.whl',
    '/pip/contrail_api_server-0.1.dev0-py3-none-any.whl',
    '/pip/schema_transformer-0.1.dev0-py3-none-any.whl',
    '/pip/fabric_ansible-0.1.dev0-py3-none-any.whl',
]
env.SetupPyTestSuiteWithDeps(sdist_gen, sdist_depends=deps, top_dir=Dir(base_path).abspath)
